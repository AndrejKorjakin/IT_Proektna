@model BundleGames.Models.Game

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<style>
    body {
        background: -webkit-radial-gradient( #0b2a3c, #1b4456);
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Game</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Game_Name, htmlAttributes: new { @class = "control-label col-md-2 text-white" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Game_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Game_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Game_Image, htmlAttributes: new { @class = "control-label col-md-2 text-white" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Game_Image, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Game_Image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Game_Cena, htmlAttributes: new { @class = "control-label col-md-2 text-white" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Game_Cena, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Game_Cena, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Game_Info, htmlAttributes: new { @class = "control-label col-md-2 text-white" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Game_Info, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Game_Info, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Release_Date, htmlAttributes: new { @class = "control-label col-md-2 text-white" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Release_Date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Release_Date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "control-label col-md-2 text-white" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Developer, htmlAttributes: new { @class = "control-label col-md-2 text-white" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Developer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Developer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2 text-white" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    <span>@Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary text-white ml-2" })</span>
    <br />
    <br />
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
